plugins {
    // Apply the java plugin to add support for Java
    id "java"

    // Apply the application plugin to add support for building a CLI application.
    id "application"

    // Let"s use Shadow to generate our Fat-Jar
    id "com.github.johnrengelman.shadow" version "5.2.0"
}

group = "io.cesarcneto.moneytransfer"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    jcenter()
}

ext {
    javalinVersion = "3.7.0"
    jacksonVersion = "2.10.2"
    mapstructVersion = "1.3.1.Final"
    lombokVersion = "1.18.12"
    sl4jVersion = "1.7.30"
    h2Version = "1.4.200"
    jdbiVersion = "3.12.2"
    hikariConnectionPoolVersion = "3.4.1"
    flywayVersion = "6.2.4"

    logbackVersion = "1.2.3"

    // Testing libraries
    junitVersion = "5.5.2"
    mockitoVersion = "2.1.0"
    unirestJavaVersion = "3.6.00"
    assertjVersion = "3.15.0"
}

dependencies {

    implementation "io.javalin:javalin:${javalinVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation "org.slf4j:slf4j-api:${sl4jVersion}"
    implementation "ch.qos.logback:logback-classic:${logbackVersion}"

    implementation "com.h2database:h2:${h2Version}"
    implementation "org.jdbi:jdbi3-core:${jdbiVersion}"
    implementation "org.jdbi:jdbi3-sqlobject:${jdbiVersion}"
    implementation "com.zaxxer:HikariCP:${hikariConnectionPoolVersion}"
    implementation "org.flywaydb:flyway-core:${flywayVersion}"

    // Use JUnit Jupiter API for testing.
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitVersion}"

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"

    // Use mockito to enabling mocking
    testImplementation "org.mockito:mockito-core:${mockitoVersion}"
    // Unirest as a http client
    testImplementation "com.konghq:unirest-java:${unirestJavaVersion}"
    testImplementation "com.konghq:unirest-objectmapper-jackson:${unirestJavaVersion}"

    // AssertJ for more readable assertions
    testImplementation "org.assertj:assertj-core:${assertjVersion}"
}

compileJava {
    options.compilerArgs << "-parameters"
}

application {
    // Define the main class for the application.
    mainClassName = "io.cesarcneto.moneytransfer.Application"
}

run {
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}

jar {
    manifest {
        attributes "Main-Class": application.getMainClassName()
    }
}
